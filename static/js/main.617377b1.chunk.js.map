{"version":3,"sources":["components/container.jsx","components/main.jsx","App.js","index.js"],"names":["Container","props","className","type","onChange","e","handleInputChange","target","value","toLowerCase","children","Main","state","list","filtered","direction","sortBy","sortData","textContent","setState","sort","a","b","text","filter","x","Object","values","map","some","includes","Axios","get","then","res","mapped","data","results","picture","thumbnail","name","first","last","phone","email","this","length","keys","k","i","onClick","r","c","src","alt","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAkBeA,MAlBf,SAAmBC,GAEf,OACI,sBAAKC,UAAW,kBAAhB,UACI,sBAAKA,UAAU,eAAf,UACI,oDACA,gDACA,uBACIC,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIJ,EAAMK,kBAAkBD,EAAEE,OAAOC,MAAMC,qBAG7DR,EAAMS,a,iBC4DJC,E,4MAnEXC,MAAQ,CACJC,KAAM,GACNC,SAAU,GACVC,WAAW,EACXC,OAAQ,I,EAiBZC,SAAW,SAACZ,GACR,IAAMa,EAAcb,EAAEE,OAAOW,YAC7B,EAAKC,SAAS,CACVL,SAAU,EAAKF,MAAME,SAASM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,GAAeI,EAAEJ,GAAe,GAAK,Q,EAI5FZ,kBAAoB,SAACiB,GAAD,OAAU,EAAKJ,SAAS,CACxCL,SAAU,EAAKF,MAAMC,KAAKW,QAAO,SAAAC,GAAC,OAAIC,OAAOC,OAAOF,GAAGG,KAAI,SAAAH,GAAC,OAAIA,EAAEhB,iBAAeoB,MAAK,SAAAJ,GAAC,OAAIA,EAAEK,SAASP,Y,kEAtBrF,IAAD,OAChBQ,IAAMC,IAAI,wCACLC,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAIE,KAAKC,QAAQT,KAAI,SAAAvB,GAAC,MAAK,CACtC,QAAWA,EAAEiC,QAAQC,UACrB,aAAclC,EAAEmC,KAAKC,MACrB,YAAapC,EAAEmC,KAAKE,KACpB,MAASrC,EAAEsC,MACX,MAAStC,EAAEuC,UAEf,EAAKzB,SAAS,CAAEN,KAAMsB,EAAQrB,SAAUqB,S,+BAe1C,IAAD,OAEL,OACI,cAAC,EAAD,CAAW7B,kBAAmBuC,KAAKvC,kBAAnC,WAGUuC,KAAKjC,MAAME,SAASgC,QAAU,wBAAO5C,UAAU,QAAjB,UAC5B,gCACI,6BAEQwB,OAAOqB,KAAKF,KAAKjC,MAAME,SAAS,IAAIc,KAAI,SAACoB,EAAGC,GAAJ,OAAU,oBAAqBC,QAAS,EAAKjC,SAAnC,SAA6C,iCAAS+B,KAA7CC,EAAI,eAI3E,gCAEQJ,KAAKjC,MAAME,SAASc,KAAI,SAACuB,EAAGF,GAAJ,OAAU,6BAE1BvB,OAAOC,OAAOwB,GAAGvB,KAAI,SAACwB,EAAGH,GAAJ,OAAU,6BAC1BA,EAAIG,EAAI,qBAAKC,IAAKD,EAAGE,IAAI,MADUL,EAAI,aAFTA,EAAI,sB,GAjD5DM,aCKJC,MAPf,WACI,OACA,cAAC,EAAD,K,MCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.617377b1.chunk.js","sourcesContent":["function Container(props) {\r\n\r\n    return (\r\n        <div className={'container-fluid'}>\r\n            <div className=\"jumbotron bg\">\r\n                <h1>Employee Directory</h1>\r\n                <h2>Search or Sort</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={e => props.handleInputChange(e.target.value.toLowerCase())}\r\n                />\r\n            </div>\r\n            {props.children}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container","import React, { Component } from \"react\";\r\nimport Container from \"./container\";\r\nimport Axios from \"axios\";\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        list: [],\r\n        filtered: [],\r\n        direction: false,\r\n        sortBy: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"https://randomuser.me/api?results=25\")\r\n            .then(res => {\r\n                const mapped = res.data.results.map(e => ({\r\n                    \"Profile\": e.picture.thumbnail,\r\n                    \"First Name\": e.name.first,\r\n                    \"Last Name\": e.name.last,\r\n                    \"Phone\": e.phone,\r\n                    \"Email\": e.email\r\n                }))\r\n                this.setState({ list: mapped, filtered: mapped })\r\n            })\r\n    }\r\n    \r\n    sortData = (e) => {\r\n        const textContent = e.target.textContent \r\n        this.setState({\r\n            filtered: this.state.filtered.sort((a, b) => a[textContent] > b[textContent] ? 1 : -1)\r\n        })\r\n    }\r\n\r\n    handleInputChange = (text) => this.setState({\r\n        filtered: this.state.list.filter(x => Object.values(x).map(x => x.toLowerCase()).some(x => x.includes(text)))\r\n    })\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container handleInputChange={this.handleInputChange}>\r\n\r\n                {\r\n                    !!this.state.filtered.length && <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {\r\n                                    Object.keys(this.state.filtered[0]).map((k, i) => <td key={i + \"-col\"} onClick={this.sortData}><button>{k}</button></td>)\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.filtered.map((r, i) => <tr key={i + '-row'}>\r\n                                    {\r\n                                        Object.values(r).map((c, i) => <td key={i + \"-cell\"}>\r\n                                            {i ? c : <img src={c} alt=\"\" />}\r\n                                        </td>)\r\n                                    }\r\n                                </tr>)\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Main\r\n","import Main from \"./components/main\"\n\nfunction App() {\n    return (\n    <Main/>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}